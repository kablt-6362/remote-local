.flex-container {
  display: flex;
  background-color: aqua;
  width: 100wh;
  height: 500px;
  /* gap는 아이템간의 간격을 조정한다. */
  gap: 20px;
}

/* 플렉스 디렉션은 배치의 방향 */
.d-row-reverse {
  /* 행,역방향 : 오른쪽 -> 왼쪽 */
  flex-direction: row-reverse;
}

.d-col {
  /* 열, 정방향 */
  flex-direction: column;
}

.d-col-reverse {
  /* 열, 역방향 */
  flex-direction: column-reverse;
}

/* 플렉스 아이템의 배치(정렬) 방식 */
.flex-start {
  /* justify-content 속성 */
  /* 주 축을 기준으로한 배치 방식 */
  justify-content: flex-start;
}

.flex-end {
  justify-content: flex-end;
}

.center {
  justify-content: center;
}

.space-between {
  justify-content: space-between;
}

.space-around {
  justify-content: space-around;
}
.spcae-evenly {
  justify-content: space-evenly;
}

/* 교차측 배치(정렬) 방식 */
.aligh-center {
  /* align-item */
  /* 교차축 방향 중앙 정렬 */
  align-items: center;
}

/* 아이템의 줄바꿈 여부 */
.flex-nowrap {
  /* 너비 또는 높이보다 내부 아이템의 너비(높이) 합이 크면 */
  /* 내부 아이템의 너피(높이)를 줄여서
  한줄에 배치 */
  flex-wrap: nowrap;
}
.flex-wrap {
  /* 너비(높이)보다 내부 아이템의 너비(높이)가 크면
  여러줄 배치 */
  flex-wrap: wrap;
}

.box {
  background-color: rgb(185, 16, 67);
  width: 100px;
  height: 200px;
  margin: 20px;
  /* 플렉스 아이템은 별도의 display를 성정 x */
  /* 왜냐하면 부모가 display: flex 라면 */
  /* 자동으로 플렉스 아이템으로 설정됨 */
}

.big-box {
  background-color: blueviolet;
  width: 50px;
  height: 50px;
}

/* 각 개별아이템의 교차 축 배치(정렬) 방식 */
/* aligh-self는 aligh-item 보다 우선순위가 높다 */
.aligh-self-center {
  align-self: center;
}

.aligh-self-end {
  align-self: flex-end;
}

/* 기본 너피(높이) */
.basic-200 {
  flex-basis: 200px;
}

/* 컨테이너의 빈공간을 차지하는 비율 */
.flex-grow-1 {
  flex-grow: 1;
}
.flex-grow-2 {
  flex-grow: 2;
}

/* shrink 의 기본값은 1을 기준으로 0이면 고정된 상태? 2이상부터는 
1의 크게에 맞게 상자가 줄어든다? */
.flex-shrink-0 {
  flex-shrink: 0;
}

.flex-shrink-2 {
  flex-shrink: 2;
}
